{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","src","alt","CardList","users","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","children","App","onSearchChange","event","setState","searchField","target","value","state","console","log","fetch","then","res","json","filteredUsers","this","filter","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAgBeA,EAbF,SAACC,GAAW,IACbC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACrB,OACI,sBAAKC,UAAU,qDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,2BAAuDG,IAAI,SACnE,gCACI,6BAAKL,IACL,4BAAIC,WCSLK,EAZE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChB,OACI,8BAEQA,EAAMC,KAAI,SAACC,EAAMC,GACb,OAAO,cAAC,EAAD,CAAoBR,GAAIO,EAAKP,GAAIF,KAAMS,EAAKT,KAAMC,MAAOQ,EAAKR,OAAnDQ,EAAKP,UCE5BS,EAXG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKT,UAAU,UAAf,SACI,uBAAOA,UAAU,wCACjBU,KAAK,SACLC,YAAY,iBACZC,SAAUH,OCCPI,EARA,SAACjB,GACZ,OACI,qBAAKkB,MAAO,CAACC,UAAW,SAAUC,OAAQ,SAA1C,SACKpB,EAAMqB,YC6DJC,E,kDAzDX,aAAc,IAAD,8BACT,gBA4BJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAcF,EAAMG,OAAOC,SA5B1C,EAAKC,MAAQ,CACTrB,MAAQ,GACRkB,YAAc,IAElBI,QAAQC,IAAI,yCANH,E,qDAYb,WAAoB,IAAD,OAKXC,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAzB,GAAK,OAAI,EAAKiB,SAAS,CAACjB,MAAQA,OAE1CsB,QAAQC,IAAI,mDACZD,QAAQC,IAAI,4F,oBAWhB,WAAS,IAAD,OAEJD,QAAQC,IAAI,uCAEZ,IAAMK,EAAgBC,KAAKR,MAAMrB,MAAM8B,QAAO,SAAA9B,GAC1C,OAAOA,EAAMP,KAAKsC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAIpE,OAA+B,IAA5BF,KAAKR,MAAMrB,MAAMiC,OACT,oDAGX,gCACI,8CACA,cAAC,EAAD,CAAW5B,aAAcwB,KAAKd,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUf,MAAO4B,a,GArDfM,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.56de25c5.chunk.js","sourcesContent":["import React from 'react';\nimport 'tachyons'\n\nconst Card = (props) => {\n    const { name, email, id } = props;\n    return (\n        <div className=\"tc grow bg-light-blue br3 pa3 ma2 bw2 shadow-5 dib\" >\n            <img src={`https://robohash.org/${id}?set=set4&?size=100x100`} alt=\"User\" />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react'\nimport Card from './Card'\n\n// const Cards = michis.map((michi, i) => {\n//     return <Card key={michi.id} id={michi.id} name={michi.name} email={michi.email} />\n// })\n\nconst CardList = ({ users }) => {\n    return (\n        <div>\n            {\n                users.map((user, i) => {\n                    return <Card key={user.id} id={user.id} name={user.name} email={user.email} />\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react'\nimport 'tachyons'\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className=\"tc pa2 \">\n            <input className=\"pa3 ba br4 b--green bg-lightest-green\" \n            type=\"search\" \n            placeholder=\"Busca al michi\"\n            onChange={searchChange}></input>\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react'\n\nconst Scroll = (props) => {\n    return(\n        <div style={{overflowY: 'scroll', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\n//import { michis } from './datosMichis' //Original\nimport Scroll from '../components/Scroll'\n\nclass App extends React.Component {\n\n    //Hook de Mounting\n    constructor(){\n        super();\n        this.state = {\n            users : [],\n            searchField : ''\n        }\n        console.log(\"constructor mounting -- Sin michis :c\");\n    }\n\n    /**\n     * Aqui vamos a hacer fetch para obtener a los usuarios (michis)\n     */\n    componentDidMount(){\n        //this.setState({users : michis}); //Original\n\n        //el settimeout namas es para ver como se pinta cuando no hay usuarios cargados\n        //setTimeout(() => {\n            fetch('https://jsonplaceholder.typicode.com/users')\n            .then(res => res.json())\n            .then(users => this.setState({users : users}));\n        //}, 1000);\n        console.log(\"componentDidMount mounting -- Obteniendo michis\");\n        console.log(\"Esto causa que se actualice es estado tons se volvera a llamar a render pero de Update\");\n    }\n\n    /**\n     * Funcion que actualiza la lista de usuarios segun la busqueda\n     * @param {} event \n     */\n    onSearchChange = (event) => {\n        this.setState({searchField : event.target.value}); //Actualizamos a searchfield \n    }\n\n    render(){\n\n        console.log(\"render mounting -- pintando michis!\");\n\n        const filteredUsers = this.state.users.filter(users => {\n            return users.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n        })\n\n        //Pa cuando no se han cargado los michis\n        if(this.state.users.length === 0)\n            return <h1>Cargando Michis :3</h1>\n\n        return (\n        <div>\n            <h1>Michifriends</h1>\n            <SearchBox searchChange={this.onSearchChange}/>\n            <Scroll>\n                <CardList users={filteredUsers}/>\n            </Scroll>\n        </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}